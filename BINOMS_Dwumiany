/*

Dla liczb całkowitych n i k, 0 <= k <= n <= 1000, wyznacz liczbę różnych k-elementowych podzbiorów zbioru n-elementowego. 
Liczby n i k będą dobrane tak, aby wynik nie przekroczył 1 000 000 000.

Input
T [ liczba testów, T <= 10000 ]
n_1 k_1
n_2 k_2
...
n_T k_T

Output
wynik_1
wynik_2
...
wynik_T
*/

import java.util.*;
import java.lang.*;
import java.io.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;

class Main
{
	public static void main (String[] args) throws java.lang.Exception
	{
		BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
		int num = Integer.parseInt(read.readLine());
		String[] line;
		int a,b;
		
		while(num-->0){
			line = read.readLine().split(" ");
			a = Integer.parseInt(line[0]);
			b = Integer.parseInt(line[1]);
			System.out.println(pascal(a, b));	
		}
	}
	
	public static long pascal(int n, int k){
		if(n<= 1 || k == 0 || n == k){
			return 1;
		}else{
			return pascal(n-1, k-1)+ pascal(n-1, k);
		}
	}
}
